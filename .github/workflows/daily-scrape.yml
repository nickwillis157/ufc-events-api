name: Daily UFC Scraper

on:
  schedule:
    # Run daily at 6:00 AM UTC (adjust timezone as needed)
    - cron: '0 6 * * *'
  
  # Allow manual triggering for testing
  workflow_dispatch:
    inputs:
      mode:
        description: 'Scraping mode (full, future, historical)'
        required: false
        default: 'full'
        type: choice
        options:
          - full
          - future
          - historical
      since:
        description: 'Start date for historical mode (YYYY-MM-DD)'
        required: false
        type: string

jobs:
  scrape-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Install Playwright browsers
      run: |
        playwright install chromium
    
    - name: Configure git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
    
    - name: Run UFC scraper (upcoming events)
      run: |
        python scrape_ufc.py --mode future --rate-limit 1.0 --output-dir data
      continue-on-error: true
    
    - name: Run UFC scraper (recent events)
      run: |
        # Get events from the past 30 days
        SINCE_DATE=$(date -d '30 days ago' +%Y-%m-%d)
        python scrape_ufc.py --mode historical --since $SINCE_DATE --rate-limit 1.0 --output-dir data
      continue-on-error: true
    
    - name: Check for changes
      id: verify-changed-files
      run: |
        if [ -n "$(git status --porcelain data/)" ]; then
          echo "changes=true" >> $GITHUB_OUTPUT
          echo "Found changes in data directory"
          git status --porcelain data/ | head -10
        else
          echo "changes=false" >> $GITHUB_OUTPUT
          echo "No changes found in data directory"
        fi
    
    - name: Commit and push changes
      if: steps.verify-changed-files.outputs.changes == 'true'
      run: |
        git add data/
        
        # Count changed files
        CHANGED_FILES=$(git diff --cached --name-only | wc -l)
        
        # Create commit message
        git commit -m "$(cat <<EOF
        Daily UFC data update - $(date +%Y-%m-%d)
        
        - Updated $CHANGED_FILES event files
        - Scraped upcoming and recent events (past 30 days)
        - Automated via GitHub Actions
        
        🤖 Generated with [Claude Code](https://claude.ai/code)
        
        Co-Authored-By: Claude <noreply@anthropic.com>
        EOF
        )"
        
        git push origin main
        
        echo "✅ Pushed $CHANGED_FILES updated files to repository"
    
    - name: No changes detected
      if: steps.verify-changed-files.outputs.changes == 'false'
      run: |
        echo "ℹ️  No new UFC data found - no deployment needed"
    
    - name: Create workflow summary
      run: |
        echo "## Daily UFC Scraper Results" >> $GITHUB_STEP_SUMMARY
        echo "**Date:** $(date)" >> $GITHUB_STEP_SUMMARY
        echo "**Status:** ${{ steps.verify-changed-files.outputs.changes == 'true' && '✅ Data Updated' || 'ℹ️ No Changes' }}" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ steps.verify-changed-files.outputs.changes }}" == "true" ]; then
          echo "**Changed Files:** $(git diff HEAD~1 --name-only data/ | wc -l)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Updated Events:" >> $GITHUB_STEP_SUMMARY
          git diff HEAD~1 --name-only data/ | head -10 | sed 's/data\///g' | sed 's/\.json//g' >> $GITHUB_STEP_SUMMARY
        fi
